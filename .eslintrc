# From Node.js project
# Modifications for this project noted by LOCAL

## LOCAL:  Use Airbnb's ES5 defaults where not otherwise specified
extends: "airbnb/legacy"

env:
  node: true

# enable ECMAScript features
ecmaFeatures:
  arrowFunctions: true
  binaryLiterals: true
  blockBindings: true
  classes: true
  forOf: true
  generators: true
  objectLiteralShorthandMethods: true
  objectLiteralShorthandProperties: true
  octalLiterals: true
  templateStrings: true

rules:
  # LOCAL:  Disable some overly-strict rules from airbnb
  func-names: 0
  no-param-reassign: 0
  one-var: 0
  vars-on-top: 0

  ## LOCAL:  Project-specific rules
  ## require spaces around single-line blocks
  block-spacing: [2, "always"]
  ## disallow trailing commas in array and object literals
  comma-dangle: [2, "never"]
  ## disallow shadowing of variables
  no-shadow: [2, { "builtinGlobals": true, "hoist": "all" }]
  ## disallow referencing variables before declaring them, excluding functions
  no-use-before-define: [2, "nofunc"]
  ## disallow unnecessary use of Function.prototype.{apply,call}
  no-useless-call: 2
  ## disallow extra spaces in object literals
  object-curly-spacing: [2, "never"]
  ## require "use strict" in the global scope
  strict: [2, "global"]

  # Possible Errors
  # list: https://github.com/eslint/eslint/tree/master/docs/rules#possible-errors
  ## check debugger sentence
  no-debugger: 2
  ## check duplicate arguments
  no-dupe-args: 2
  ## check duplicate object keys
  no-dupe-keys: 2
  ## check duplicate switch-case
  no-duplicate-case: 2
  ## disallow assignment of exceptional params
  no-ex-assign: 2
  ## disallow use of reserved words as keys like enum, class
  quote-props: [2, "as-needed", { "keywords": true }]
  ## disallow unreachable code
  no-unreachable: 2
  ## require valid typeof compared string like typeof foo === 'strnig'
  valid-typeof: 2

  # Best Practices
  # list: https://github.com/eslint/eslint/tree/master/docs/rules#best-practices
  ## require falls through comment on switch-case
  no-fallthrough: 2

  # Stylistic Issues
  # list: https://github.com/eslint/eslint/tree/master/docs/rules#stylistic-issues
  ## use single quote, we can use double quote when escape chars
  quotes: [2, "single", "avoid-escape"]
  ## 2 space indentation
  indent: [2, 2]
  ## add space after comma
  comma-spacing: 2
  ## put semi-colon
  semi: 2
  ## require spaces operator like var sum = 1 + 1;
  space-infix-ops: 2
  ## require spaces return, throw, case
  space-return-throw-case: 2
  ## no space before function, eg. 'function()'
  space-before-function-paren: [2, "never"]
  ## require space before blocks, eg 'function() {'
  space-before-blocks: [2, "always"]
  ## require parens for Constructor
  new-parens: 2
  ## max 80 length
  max-len: [2, 80, 2]
  ## max 2 consecutive empty lines
  no-multiple-empty-lines: [2, {max: 2}]
  ## require newline at end of files
  eol-last: 2
  ## no trailing spaces
  no-trailing-spaces: 2
  # require space after keywords, eg 'for (..)'
  space-after-keywords: 2

  # ECMAScript 6
  # list: http://eslint.org/docs/rules/#ecmascript-6
  ## Suggest using 'const' wherever possible
  prefer-const: 2

  # Strict Mode
  # list: https://github.com/eslint/eslint/tree/master/docs/rules#strict-mode
  ## 'use strict' on top
  strict: [2, "global"]

  # Variables
  # list: https://github.com/eslint/eslint/tree/master/docs/rules#variables
  ## disallow use of undefined variables (globals)
  no-undef: 2
  ## disallow declaration of variables that are not used in the code
  no-unused-vars: [2, {"args": "none"}]

# vi: set sts=2 sw=2 et ft=yaml:
